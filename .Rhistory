}
arima_model <- Arima(TSADataNsdq, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
TSADataSP <- GSPCData$GSPC
TSADataSP <- na.omit(TSADataSP)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
sum(is.na(TSADataSP))
View(TSADataSP)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
arima_model <- Arima(TSADataSP, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
arima_model <- Arima(TSADataSP, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
arima_model <- Arima(TSADataSP, order = c(1, 0, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
arima_model <- Arima(TSADataSP, order = c(2, 0, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
}
arima_model <- Arima(TSADataSP, order = c(3, 0, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataDJI <- DJIData$DJI
TSADataDJI <- na.omit(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataDJI <- diff(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
}
arima_model <- Arima(TSADataDJI, order = c(1, 0, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataDJI <- DJIData$DJI
TSADataDJI <- na.omit(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataDJI <- diff(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
}
arima_model <- Arima(TSADataDJI, order = c(1, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataDJI <- DJIData$DJI
TSADataDJI <- na.omit(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataDJI <- diff(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataDJI, order = c(1, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
library(tseries)
library(forecast)
TSADataDJI <- DJIData$DJI
TSADataDJI <- na.omit(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataDJI <- diff(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataDJI, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataSP, order = c(2, 0, 0)) #(2,0,0) is optimal for SP500
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataNsdq <- NasdaqData$IXIC
TSADataNsdq <- na.omit(TSADataNsdq)
adf_result <- adf.test(TSADataNsdq)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataNsdq <- diff(TSADataNsdq)
adf_result <- adf.test(TSADataNsdq)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataNsdq, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataNsdq <- NasdaqData$IXIC
TSADataNsdq <- na.omit(TSADataNsdq)
adf_result <- adf.test(TSADataNsdq)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataNsdq <- diff(TSADataNsdq)
adf_result <- adf.test(TSADataNsdq)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataNsdq, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataSP, order = c(2, 0, 0)) #(2,0,0) is optimal for SP500
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataDJI <- DJIData$DJI
TSADataDJI <- na.omit(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataDJI <- diff(TSADataDJI)
adf_result <- adf.test(TSADataDJI)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataDJI, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataSP <- GSPCData$GSPC
TSADataSP <- diff(TSADataSP)
TSADataSP <- na.omit(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("ADF Test Statistic Value:", adf_resultSP$statistic, "\n")
cat("ADF Test p-value:", adf_resultSP$p.value, "\n")
if (adf_resultSP$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataSP <- diff(TSADataSP)
adf_resultSP <- adf.test(TSADataSP)
cat("After differencing, ADF Test Statistic:",
adf_resultSP$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_resultSP$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataSP, order = c(2, 0, 0)) #(2,0,0) is optimal for SP500
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataNsdq <- NasdaqData$IXIC
TSADataNsdq <- na.omit(TSADataNsdq)
adf_result <- adf.test(TSADataNsdq)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataNsdq <- diff(TSADataNsdq)
adf_result <- adf.test(TSADataNsdq)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataNsdq, order = c(3, 1, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataVIX <- VIXData$VIX
TSADataVIX <- na.omit(TSADataVIX)
adf_result <- adf.test(TSADataVIX)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataVIX <- diff(TSADataVIX)
adf_result <- adf.test(TSADataVIX)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataNsdq, order = c(1, 0, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataVIX <- VIXData$VIX
TSADataVIX <- na.omit(TSADataVIX)
adf_result <- adf.test(TSADataVIX)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataVIX <- diff(TSADataVIX)
adf_result <- adf.test(TSADataVIX)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataNsdq, order = c(2, 0, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
library(tseries)
library(forecast)
TSADataVIX <- VIXData$VIX
TSADataVIX <- na.omit(TSADataVIX)
adf_result <- adf.test(TSADataVIX)
cat("ADF Test Statistic Value:", adf_result$statistic, "\n")
cat("ADF Test p-value:", adf_result$p.value, "\n")
if (adf_result$p.value > 0.05){
cat("The time-series data possesses non-stationarity features, which isn't optimal. Applying first fixes...\n")
TSADataVIX <- diff(TSADataVIX)
adf_result <- adf.test(TSADataVIX)
cat("After differencing, ADF Test Statistic:",
adf_result$statistic, "\n")
cat("After differencing, ADF Test p-value:",
adf_result$p.value, "\n")
} else {
cat("The time-series data possesses stationarity features.")
}
arima_model <- Arima(TSADataNsdq, order = c(3, 0, 0))
summary(arima_model)
forecasted_values <- forecast(arima_model, h=10)
plot(forecasted_values)
checkresiduals(arima_model)
